//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.ServiceModel.Description;

namespace amorphie.contract.infrastructure
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "DmsServiceSoap")]
    public interface DmsServiceSoap
    {

        // CODEGEN: Parameter 'binaryData' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/AddDocument", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        AddDocumentResponse AddDocument(AddDocumentRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/AddDocument", ReplyAction = "*")]
        System.Threading.Tasks.Task<AddDocumentResponse> AddDocumentAsync(AddDocumentRequest request);

        // CODEGEN: Parameter 'GetFileDataResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetFileData", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        GetFileDataResponse GetFileData(GetFileDataRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetFileData", ReplyAction = "*")]
        System.Threading.Tasks.Task<GetFileDataResponse> GetFileDataAsync(GetFileDataRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/UpdatePageNum", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void UpdatePageNum(string docID, int pageNum);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/UpdatePageNum", ReplyAction = "*")]
        System.Threading.Tasks.Task UpdatePageNumAsync(string docID, int pageNum);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetDocumentInfo", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        FileInfo GetDocumentInfo(string docID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetDocumentInfo", ReplyAction = "*")]
        System.Threading.Tasks.Task<FileInfo> GetDocumentInfoAsync(string docID);

        // CODEGEN: Parameter 'GetAnnotationResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetAnnotation", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        GetAnnotationResponse GetAnnotation(GetAnnotationRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetAnnotation", ReplyAction = "*")]
        System.Threading.Tasks.Task<GetAnnotationResponse> GetAnnotationAsync(GetAnnotationRequest request);

        // CODEGEN: Parameter 'GetAnnotationObjectResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetAnnotationObject", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        GetAnnotationObjectResponse GetAnnotationObject(GetAnnotationObjectRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetAnnotationObject", ReplyAction = "*")]
        System.Threading.Tasks.Task<GetAnnotationObjectResponse> GetAnnotationObjectAsync(GetAnnotationObjectRequest request);

        // CODEGEN: Parameter 'annotationData' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/SaveAnnotation", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        SaveAnnotationResponse SaveAnnotation(SaveAnnotationRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/SaveAnnotation", ReplyAction = "*")]
        System.Threading.Tasks.Task<SaveAnnotationResponse> SaveAnnotationAsync(SaveAnnotationRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetDocumentInfoAndData", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        InfoAndDataResponse GetDocumentInfoAndData(string docID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetDocumentInfoAndData", ReplyAction = "*")]
        System.Threading.Tasks.Task<InfoAndDataResponse> GetDocumentInfoAndDataAsync(string docID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetDocument", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        DocumentResponse GetDocument(string docID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetDocument", ReplyAction = "*")]
        System.Threading.Tasks.Task<DocumentResponse> GetDocumentAsync(string docID);

        // CODEGEN: Parameter 'binaryData' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/UpdateFile", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        UpdateFileResponse UpdateFile(UpdateFileRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/UpdateFile", ReplyAction = "*")]
        System.Threading.Tasks.Task<UpdateFileResponse> UpdateFileAsync(UpdateFileRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/UpdateDocument", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool UpdateDocument(string docID, string cmdData);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/UpdateDocument", ReplyAction = "*")]
        System.Threading.Tasks.Task<bool> UpdateDocumentAsync(string docID, string cmdData);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/DeleteDocument", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool DeleteDocument(string docID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/DeleteDocument", ReplyAction = "*")]
        System.Threading.Tasks.Task<bool> DeleteDocumentAsync(string docID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetMessage", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        string GetMessage(string msgGroup, string msgID, string msgLang);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetMessage", ReplyAction = "*")]
        System.Threading.Tasks.Task<string> GetMessageAsync(string msgGroup, string msgID, string msgLang);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/LookForDocument", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool LookForDocument(string tagData);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/LookForDocument", ReplyAction = "*")]
        System.Threading.Tasks.Task<bool> LookForDocumentAsync(string tagData);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/SearchForDocument", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        int[] SearchForDocument(string tagData);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/SearchForDocument", ReplyAction = "*")]
        System.Threading.Tasks.Task<int[]> SearchForDocumentAsync(string tagData);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/SearchForDocumentWithMeta", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet SearchForDocumentWithMeta(string tagData, int pageNum, int pageSize);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/SearchForDocumentWithMeta", ReplyAction = "*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchForDocumentWithMetaAsync(string tagData, int pageNum, int pageSize);

        // CODEGEN: Parameter 'ExecuteCmdResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ExecuteCmd", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        ExecuteCmdResponse ExecuteCmd(ExecuteCmdRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ExecuteCmd", ReplyAction = "*")]
        System.Threading.Tasks.Task<ExecuteCmdResponse> ExecuteCmdAsync(ExecuteCmdRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ProvideDownloadLink", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        string ProvideDownloadLink(string docID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ProvideDownloadLink", ReplyAction = "*")]
        System.Threading.Tasks.Task<string> ProvideDownloadLinkAsync(string docID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetCustomerDocument", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetCustomerDocument(string customerNum);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetCustomerDocument", ReplyAction = "*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDocumentAsync(string customerNum);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetCustomerDocumentMulti", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetCustomerDocumentMulti(string customerNum, string langCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetCustomerDocumentMulti", ReplyAction = "*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDocumentMultiAsync(string customerNum, string langCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetMetaData", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetMetaData(int docID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetMetaData", ReplyAction = "*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMetaDataAsync(int docID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetStatementDocument", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetStatementDocument(string cardNum, string customerNum);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetStatementDocument", ReplyAction = "*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStatementDocumentAsync(string cardNum, string customerNum);

        // CODEGEN: Parameter 'GetFileResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetFile", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        GetFileResponse GetFile(GetFileRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetFile", ReplyAction = "*")]
        System.Threading.Tasks.Task<GetFileResponse> GetFileAsync(GetFileRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/SearchForDocumentWithCreateTime", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        int[] SearchForDocumentWithCreateTime(string tagData, System.DateTime startDate, System.DateTime endDate);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/SearchForDocumentWithCreateTime", ReplyAction = "*")]
        System.Threading.Tasks.Task<int[]> SearchForDocumentWithCreateTimeAsync(string tagData, System.DateTime startDate, System.DateTime endDate);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetSchemaList", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetSchemaList(string LangCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetSchemaList", ReplyAction = "*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSchemaListAsync(string LangCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/MultiplicateReferences", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        long[] MultiplicateReferences(long DocID, string[] referenceList);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/MultiplicateReferences", ReplyAction = "*")]
        System.Threading.Tasks.Task<long[]> MultiplicateReferencesAsync(long DocID, string[] referenceList);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetTagList", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetTagList(string SchemaID, string LangCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetTagList", ReplyAction = "*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTagListAsync(string SchemaID, string LangCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetTagElementList", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetTagElementList(string TagID, string LangCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetTagElementList", ReplyAction = "*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTagElementListAsync(string TagID, string LangCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/AddBarcodedDocRecord", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        long AddBarcodedDocRecord(string docTypeID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/AddBarcodedDocRecord", ReplyAction = "*")]
        System.Threading.Tasks.Task<long> AddBarcodedDocRecordAsync(string docTypeID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetDMSDocument", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        DMSDocument GetDMSDocument(long docID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetDMSDocument", ReplyAction = "*")]
        System.Threading.Tasks.Task<DMSDocument> GetDMSDocumentAsync(long docID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/CustomerHasStockDoc", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool CustomerHasStockDoc(string customerNum);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/CustomerHasStockDoc", ReplyAction = "*")]
        System.Threading.Tasks.Task<bool> CustomerHasStockDocAsync(string customerNum);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/CustomerHasDocByType", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        DocReturnValues CustomerHasDocByType(string customerNum, int docType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/CustomerHasDocByType", ReplyAction = "*")]
        System.Threading.Tasks.Task<DocReturnValues> CustomerHasDocByTypeAsync(string customerNum, int docType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetDocumentByCustomerAndTag", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        InfoAndDataResponse GetDocumentByCustomerAndTag(string customerNum, string tags);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetDocumentByCustomerAndTag", ReplyAction = "*")]
        System.Threading.Tasks.Task<InfoAndDataResponse> GetDocumentByCustomerAndTagAsync(string customerNum, string tags);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IbGetDocumentGroups", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        IbGetDocumentGroupsResponse IbGetDocumentGroups(IbGetDocumentGroupsRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IbGetDocumentGroups", ReplyAction = "*")]
        System.Threading.Tasks.Task<IbGetDocumentGroupsResponse> IbGetDocumentGroupsAsync(IbGetDocumentGroupsRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IbGetDocuments", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        IbGetDocumentsResponse IbGetDocuments(IbGetDocumentsRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IbGetDocuments", ReplyAction = "*")]
        System.Threading.Tasks.Task<IbGetDocumentsResponse> IbGetDocumentsAsync(IbGetDocumentsRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IbGetDocumentContent", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        IbGetDocumentContentResponse IbGetDocumentContent(IbGetDocumentContentRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IbGetDocumentContent", ReplyAction = "*")]
        System.Threading.Tasks.Task<IbGetDocumentContentResponse> IbGetDocumentContentAsync(IbGetDocumentContentRequest request);
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "AddDocument", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class AddDocumentRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string cmdData;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] binaryData;

        public AddDocumentRequest()
        {
        }

        public AddDocumentRequest(string cmdData, byte[] binaryData)
        {
            this.cmdData = cmdData;
            this.binaryData = binaryData;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "AddDocumentResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class AddDocumentResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string AddDocumentResult;

        public AddDocumentResponse()
        {
        }

        public AddDocumentResponse(string AddDocumentResult)
        {
            this.AddDocumentResult = AddDocumentResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetFileData", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetFileDataRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string docID;

        public GetFileDataRequest()
        {
        }

        public GetFileDataRequest(string docID)
        {
            this.docID = docID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetFileDataResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetFileDataResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetFileDataResult;

        public GetFileDataResponse()
        {
        }

        public GetFileDataResponse(byte[] GetFileDataResult)
        {
            this.GetFileDataResult = GetFileDataResult;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class FileInfo
    {

        private string serverIDField;

        private string libraryField;

        private string cabinetField;

        private string folderField;

        private string idField;

        private long docIDField;

        private string mimeTypeField;

        private string fileNameField;

        private bool isLegacyField;

        private System.DateTime createTimeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public string ServerID
        {
            get
            {
                return this.serverIDField;
            }
            set
            {
                this.serverIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public string Library
        {
            get
            {
                return this.libraryField;
            }
            set
            {
                this.libraryField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        public string Cabinet
        {
            get
            {
                return this.cabinetField;
            }
            set
            {
                this.cabinetField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        public string Folder
        {
            get
            {
                return this.folderField;
            }
            set
            {
                this.folderField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
        public long DocID
        {
            get
            {
                return this.docIDField;
            }
            set
            {
                this.docIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
        public string MimeType
        {
            get
            {
                return this.mimeTypeField;
            }
            set
            {
                this.mimeTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
        public string FileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
        public bool IsLegacy
        {
            get
            {
                return this.isLegacyField;
            }
            set
            {
                this.isLegacyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
        public System.DateTime CreateTime
        {
            get
            {
                return this.createTimeField;
            }
            set
            {
                this.createTimeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class IbGetDocumentContentResponse
    {

        private IbDocument ibDocumentField;

        private byte[] contentField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public IbDocument IbDocument
        {
            get
            {
                return this.ibDocumentField;
            }
            set
            {
                this.ibDocumentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary", Order = 1)]
        public byte[] Content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class IbDocument
    {

        private string docIdField;

        private IbTagGroup groupField;

        private string nameField;

        private string descriptionField;

        private string fileExtensionField;

        private string mimeTypeField;

        private System.DateTime docDateField;

        private IbMetaData[] metaDataListField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public string DocId
        {
            get
            {
                return this.docIdField;
            }
            set
            {
                this.docIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public IbTagGroup Group
        {
            get
            {
                return this.groupField;
            }
            set
            {
                this.groupField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
        public string FileExtension
        {
            get
            {
                return this.fileExtensionField;
            }
            set
            {
                this.fileExtensionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
        public string MimeType
        {
            get
            {
                return this.mimeTypeField;
            }
            set
            {
                this.mimeTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
        public System.DateTime DocDate
        {
            get
            {
                return this.docDateField;
            }
            set
            {
                this.docDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order = 7)]
        public IbMetaData[] MetaDataList
        {
            get
            {
                return this.metaDataListField;
            }
            set
            {
                this.metaDataListField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class IbTagGroup
    {

        private string tagIdField;

        private string tagNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public string TagId
        {
            get
            {
                return this.tagIdField;
            }
            set
            {
                this.tagIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public string TagName
        {
            get
            {
                return this.tagNameField;
            }
            set
            {
                this.tagNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class IbMetaData
    {

        private string keyField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public string Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class IbGetDocumentContentRequest
    {

        private string customerIdField;

        private string documentIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public string CustomerId
        {
            get
            {
                return this.customerIdField;
            }
            set
            {
                this.customerIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public string DocumentId
        {
            get
            {
                return this.documentIdField;
            }
            set
            {
                this.documentIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class IbGetDocumentsResponse
    {

        private IbDocument[] ibDocumentListField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order = 0)]
        public IbDocument[] IbDocumentList
        {
            get
            {
                return this.ibDocumentListField;
            }
            set
            {
                this.ibDocumentListField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class IbGetDocumentsRequest
    {

        private string channelField;

        private string customerIdField;

        private string tagIdField;

        private System.DateTime startDateField;

        private System.DateTime endDateField;

        private int pageNumField;

        private int pageSizeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public string Channel
        {
            get
            {
                return this.channelField;
            }
            set
            {
                this.channelField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public string CustomerId
        {
            get
            {
                return this.customerIdField;
            }
            set
            {
                this.customerIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        public string TagId
        {
            get
            {
                return this.tagIdField;
            }
            set
            {
                this.tagIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        public System.DateTime StartDate
        {
            get
            {
                return this.startDateField;
            }
            set
            {
                this.startDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
        public System.DateTime EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                this.endDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
        public int PageNum
        {
            get
            {
                return this.pageNumField;
            }
            set
            {
                this.pageNumField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
        public int PageSize
        {
            get
            {
                return this.pageSizeField;
            }
            set
            {
                this.pageSizeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class IbGetDocumentGroupsResponse
    {

        private IbTagGroup[] tagGroupListField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order = 0)]
        public IbTagGroup[] TagGroupList
        {
            get
            {
                return this.tagGroupListField;
            }
            set
            {
                this.tagGroupListField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class IbGetDocumentGroupsRequest
    {

        private string channelField;

        private string customerIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public string Channel
        {
            get
            {
                return this.channelField;
            }
            set
            {
                this.channelField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public string CustomerId
        {
            get
            {
                return this.customerIdField;
            }
            set
            {
                this.customerIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class DocReturnValues
    {

        private int errorCodeField;

        private string errorValField;

        private bool hasDocField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public int ErrorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public string ErrorVal
        {
            get
            {
                return this.errorValField;
            }
            set
            {
                this.errorValField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        public bool HasDoc
        {
            get
            {
                return this.hasDocField;
            }
            set
            {
                this.hasDocField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class DMSDocument
    {

        private long idField;

        private System.DateTime createTimeField;

        private string ownerIDField;

        private string titleField;

        private string notesField;

        private string dcField;

        private string channelField;

        private string customerNoField;

        private string applicationNoField;

        private string wfInstanceIDField;

        private bool isExpiredField;

        private string tagIDField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public long ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public System.DateTime CreateTime
        {
            get
            {
                return this.createTimeField;
            }
            set
            {
                this.createTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        public string OwnerID
        {
            get
            {
                return this.ownerIDField;
            }
            set
            {
                this.ownerIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        public string Title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                this.titleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
        public string Notes
        {
            get
            {
                return this.notesField;
            }
            set
            {
                this.notesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
        public string Dc
        {
            get
            {
                return this.dcField;
            }
            set
            {
                this.dcField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
        public string Channel
        {
            get
            {
                return this.channelField;
            }
            set
            {
                this.channelField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
        public string CustomerNo
        {
            get
            {
                return this.customerNoField;
            }
            set
            {
                this.customerNoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
        public string ApplicationNo
        {
            get
            {
                return this.applicationNoField;
            }
            set
            {
                this.applicationNoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
        public string WfInstanceID
        {
            get
            {
                return this.wfInstanceIDField;
            }
            set
            {
                this.wfInstanceIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
        public bool IsExpired
        {
            get
            {
                return this.isExpiredField;
            }
            set
            {
                this.isExpiredField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
        public string TagID
        {
            get
            {
                return this.tagIDField;
            }
            set
            {
                this.tagIDField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class DocumentResponse
    {

        private string metaDataField;

        private FileInfo fInfoField;

        private byte[] binaryDataField;

        private byte[] annotationField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public string MetaData
        {
            get
            {
                return this.metaDataField;
            }
            set
            {
                this.metaDataField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public FileInfo FInfo
        {
            get
            {
                return this.fInfoField;
            }
            set
            {
                this.fInfoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary", Order = 2)]
        public byte[] BinaryData
        {
            get
            {
                return this.binaryDataField;
            }
            set
            {
                this.binaryDataField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary", Order = 3)]
        public byte[] Annotation
        {
            get
            {
                return this.annotationField;
            }
            set
            {
                this.annotationField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class InfoAndDataResponse
    {

        private FileInfo fInfoField;

        private byte[] binaryDataField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public FileInfo FInfo
        {
            get
            {
                return this.fInfoField;
            }
            set
            {
                this.fInfoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary", Order = 1)]
        public byte[] BinaryData
        {
            get
            {
                return this.binaryDataField;
            }
            set
            {
                this.binaryDataField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetAnnotation", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetAnnotationRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string docID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public int pageNum;

        public GetAnnotationRequest()
        {
        }

        public GetAnnotationRequest(string docID, int pageNum)
        {
            this.docID = docID;
            this.pageNum = pageNum;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetAnnotationResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetAnnotationResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetAnnotationResult;

        public GetAnnotationResponse()
        {
        }

        public GetAnnotationResponse(byte[] GetAnnotationResult)
        {
            this.GetAnnotationResult = GetAnnotationResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetAnnotationObject", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetAnnotationObjectRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string docID;

        public GetAnnotationObjectRequest()
        {
        }

        public GetAnnotationObjectRequest(string docID)
        {
            this.docID = docID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetAnnotationObjectResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetAnnotationObjectResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetAnnotationObjectResult;

        public GetAnnotationObjectResponse()
        {
        }

        public GetAnnotationObjectResponse(byte[] GetAnnotationObjectResult)
        {
            this.GetAnnotationObjectResult = GetAnnotationObjectResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "SaveAnnotation", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class SaveAnnotationRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string docID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public int pageNum;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public string userID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 3)]
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] annotationData;

        public SaveAnnotationRequest()
        {
        }

        public SaveAnnotationRequest(string docID, int pageNum, string userID, byte[] annotationData)
        {
            this.docID = docID;
            this.pageNum = pageNum;
            this.userID = userID;
            this.annotationData = annotationData;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "SaveAnnotationResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class SaveAnnotationResponse
    {

        public SaveAnnotationResponse()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "UpdateFile", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class UpdateFileRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public long docID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public string fileName;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public string mimeType;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 3)]
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] binaryData;

        public UpdateFileRequest()
        {
        }

        public UpdateFileRequest(long docID, string fileName, string mimeType, byte[] binaryData)
        {
            this.docID = docID;
            this.fileName = fileName;
            this.mimeType = mimeType;
            this.binaryData = binaryData;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "UpdateFileResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class UpdateFileResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool UpdateFileResult;

        public UpdateFileResponse()
        {
        }

        public UpdateFileResponse(bool UpdateFileResult)
        {
            this.UpdateFileResult = UpdateFileResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "ExecuteCmd", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class ExecuteCmdRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] receivedCmd;

        public ExecuteCmdRequest()
        {
        }

        public ExecuteCmdRequest(byte[] receivedCmd)
        {
            this.receivedCmd = receivedCmd;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "ExecuteCmdResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class ExecuteCmdResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] ExecuteCmdResult;

        public ExecuteCmdResponse()
        {
        }

        public ExecuteCmdResponse(byte[] ExecuteCmdResult)
        {
            this.ExecuteCmdResult = ExecuteCmdResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetFile", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetFileRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string tagData;

        public GetFileRequest()
        {
        }

        public GetFileRequest(string tagData)
        {
            this.tagData = tagData;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetFileResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetFileResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetFileResult;

        public GetFileResponse()
        {
        }

        public GetFileResponse(byte[] GetFileResult)
        {
            this.GetFileResult = GetFileResult;
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DmsServiceSoapChannel : DmsServiceSoap, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DmsServiceSoapClient : System.ServiceModel.ClientBase<DmsServiceSoap>, DmsServiceSoap
    {

        public DmsServiceSoapClient()
        {
        }

        public DmsServiceSoapClient(ServiceEndpoint endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        // public DmsServiceSoapClient(Binding endpointConfigurationName, EndpointAddress remoteAddress) :
        //         base(endpointConfigurationName, remoteAddress)
        // {
        // }

        public DmsServiceSoapClient(Binding endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        // public DmsServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
        //         base(binding, remoteAddress)
        // {
        // }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AddDocumentResponse DmsServiceSoap.AddDocument(AddDocumentRequest request)
        {
            return base.Channel.AddDocument(request);
        }

        public string AddDocument(string cmdData, byte[] binaryData)
        {
            AddDocumentRequest inValue = new AddDocumentRequest();
            inValue.cmdData = cmdData;
            inValue.binaryData = binaryData;
            AddDocumentResponse retVal = ((DmsServiceSoap)(this)).AddDocument(inValue);
            return retVal.AddDocumentResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AddDocumentResponse> DmsServiceSoap.AddDocumentAsync(AddDocumentRequest request)
        {
            return base.Channel.AddDocumentAsync(request);
        }

        public System.Threading.Tasks.Task<AddDocumentResponse> AddDocumentAsync(string cmdData, byte[] binaryData)
        {
            AddDocumentRequest inValue = new AddDocumentRequest();
            inValue.cmdData = cmdData;
            inValue.binaryData = binaryData;
            return ((DmsServiceSoap)(this)).AddDocumentAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetFileDataResponse DmsServiceSoap.GetFileData(GetFileDataRequest request)
        {
            return base.Channel.GetFileData(request);
        }

        public byte[] GetFileData(string docID)
        {
            GetFileDataRequest inValue = new GetFileDataRequest();
            inValue.docID = docID;
            GetFileDataResponse retVal = ((DmsServiceSoap)(this)).GetFileData(inValue);
            return retVal.GetFileDataResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GetFileDataResponse> DmsServiceSoap.GetFileDataAsync(GetFileDataRequest request)
        {
            return base.Channel.GetFileDataAsync(request);
        }

        public System.Threading.Tasks.Task<GetFileDataResponse> GetFileDataAsync(string docID)
        {
            GetFileDataRequest inValue = new GetFileDataRequest();
            inValue.docID = docID;
            return ((DmsServiceSoap)(this)).GetFileDataAsync(inValue);
        }

        public void UpdatePageNum(string docID, int pageNum)
        {
            base.Channel.UpdatePageNum(docID, pageNum);
        }

        public System.Threading.Tasks.Task UpdatePageNumAsync(string docID, int pageNum)
        {
            return base.Channel.UpdatePageNumAsync(docID, pageNum);
        }

        public FileInfo GetDocumentInfo(string docID)
        {
            return base.Channel.GetDocumentInfo(docID);
        }

        public System.Threading.Tasks.Task<FileInfo> GetDocumentInfoAsync(string docID)
        {
            return base.Channel.GetDocumentInfoAsync(docID);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetAnnotationResponse DmsServiceSoap.GetAnnotation(GetAnnotationRequest request)
        {
            return base.Channel.GetAnnotation(request);
        }

        public byte[] GetAnnotation(string docID, int pageNum)
        {
            GetAnnotationRequest inValue = new GetAnnotationRequest();
            inValue.docID = docID;
            inValue.pageNum = pageNum;
            GetAnnotationResponse retVal = ((DmsServiceSoap)(this)).GetAnnotation(inValue);
            return retVal.GetAnnotationResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GetAnnotationResponse> DmsServiceSoap.GetAnnotationAsync(GetAnnotationRequest request)
        {
            return base.Channel.GetAnnotationAsync(request);
        }

        public System.Threading.Tasks.Task<GetAnnotationResponse> GetAnnotationAsync(string docID, int pageNum)
        {
            GetAnnotationRequest inValue = new GetAnnotationRequest();
            inValue.docID = docID;
            inValue.pageNum = pageNum;
            return ((DmsServiceSoap)(this)).GetAnnotationAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetAnnotationObjectResponse DmsServiceSoap.GetAnnotationObject(GetAnnotationObjectRequest request)
        {
            return base.Channel.GetAnnotationObject(request);
        }

        public byte[] GetAnnotationObject(string docID)
        {
            GetAnnotationObjectRequest inValue = new GetAnnotationObjectRequest();
            inValue.docID = docID;
            GetAnnotationObjectResponse retVal = ((DmsServiceSoap)(this)).GetAnnotationObject(inValue);
            return retVal.GetAnnotationObjectResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GetAnnotationObjectResponse> DmsServiceSoap.GetAnnotationObjectAsync(GetAnnotationObjectRequest request)
        {
            return base.Channel.GetAnnotationObjectAsync(request);
        }

        public System.Threading.Tasks.Task<GetAnnotationObjectResponse> GetAnnotationObjectAsync(string docID)
        {
            GetAnnotationObjectRequest inValue = new GetAnnotationObjectRequest();
            inValue.docID = docID;
            return ((DmsServiceSoap)(this)).GetAnnotationObjectAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SaveAnnotationResponse DmsServiceSoap.SaveAnnotation(SaveAnnotationRequest request)
        {
            return base.Channel.SaveAnnotation(request);
        }

        public void SaveAnnotation(string docID, int pageNum, string userID, byte[] annotationData)
        {
            SaveAnnotationRequest inValue = new SaveAnnotationRequest();
            inValue.docID = docID;
            inValue.pageNum = pageNum;
            inValue.userID = userID;
            inValue.annotationData = annotationData;
            SaveAnnotationResponse retVal = ((DmsServiceSoap)(this)).SaveAnnotation(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SaveAnnotationResponse> DmsServiceSoap.SaveAnnotationAsync(SaveAnnotationRequest request)
        {
            return base.Channel.SaveAnnotationAsync(request);
        }

        public System.Threading.Tasks.Task<SaveAnnotationResponse> SaveAnnotationAsync(string docID, int pageNum, string userID, byte[] annotationData)
        {
            SaveAnnotationRequest inValue = new SaveAnnotationRequest();
            inValue.docID = docID;
            inValue.pageNum = pageNum;
            inValue.userID = userID;
            inValue.annotationData = annotationData;
            return ((DmsServiceSoap)(this)).SaveAnnotationAsync(inValue);
        }

        public InfoAndDataResponse GetDocumentInfoAndData(string docID)
        {
            return base.Channel.GetDocumentInfoAndData(docID);
        }

        public System.Threading.Tasks.Task<InfoAndDataResponse> GetDocumentInfoAndDataAsync(string docID)
        {
            return base.Channel.GetDocumentInfoAndDataAsync(docID);
        }

        public DocumentResponse GetDocument(string docID)
        {
            return base.Channel.GetDocument(docID);
        }

        public System.Threading.Tasks.Task<DocumentResponse> GetDocumentAsync(string docID)
        {
            return base.Channel.GetDocumentAsync(docID);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UpdateFileResponse DmsServiceSoap.UpdateFile(UpdateFileRequest request)
        {
            return base.Channel.UpdateFile(request);
        }

        public bool UpdateFile(long docID, string fileName, string mimeType, byte[] binaryData)
        {
            UpdateFileRequest inValue = new UpdateFileRequest();
            inValue.docID = docID;
            inValue.fileName = fileName;
            inValue.mimeType = mimeType;
            inValue.binaryData = binaryData;
            UpdateFileResponse retVal = ((DmsServiceSoap)(this)).UpdateFile(inValue);
            return retVal.UpdateFileResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UpdateFileResponse> DmsServiceSoap.UpdateFileAsync(UpdateFileRequest request)
        {
            return base.Channel.UpdateFileAsync(request);
        }

        public System.Threading.Tasks.Task<UpdateFileResponse> UpdateFileAsync(long docID, string fileName, string mimeType, byte[] binaryData)
        {
            UpdateFileRequest inValue = new UpdateFileRequest();
            inValue.docID = docID;
            inValue.fileName = fileName;
            inValue.mimeType = mimeType;
            inValue.binaryData = binaryData;
            return ((DmsServiceSoap)(this)).UpdateFileAsync(inValue);
        }

        public bool UpdateDocument(string docID, string cmdData)
        {
            return base.Channel.UpdateDocument(docID, cmdData);
        }

        public System.Threading.Tasks.Task<bool> UpdateDocumentAsync(string docID, string cmdData)
        {
            return base.Channel.UpdateDocumentAsync(docID, cmdData);
        }

        public bool DeleteDocument(string docID)
        {
            return base.Channel.DeleteDocument(docID);
        }

        public System.Threading.Tasks.Task<bool> DeleteDocumentAsync(string docID)
        {
            return base.Channel.DeleteDocumentAsync(docID);
        }

        public string GetMessage(string msgGroup, string msgID, string msgLang)
        {
            return base.Channel.GetMessage(msgGroup, msgID, msgLang);
        }

        public System.Threading.Tasks.Task<string> GetMessageAsync(string msgGroup, string msgID, string msgLang)
        {
            return base.Channel.GetMessageAsync(msgGroup, msgID, msgLang);
        }

        public bool LookForDocument(string tagData)
        {
            return base.Channel.LookForDocument(tagData);
        }

        public System.Threading.Tasks.Task<bool> LookForDocumentAsync(string tagData)
        {
            return base.Channel.LookForDocumentAsync(tagData);
        }

        public int[] SearchForDocument(string tagData)
        {
            return base.Channel.SearchForDocument(tagData);
        }

        public System.Threading.Tasks.Task<int[]> SearchForDocumentAsync(string tagData)
        {
            return base.Channel.SearchForDocumentAsync(tagData);
        }

        public System.Data.DataSet SearchForDocumentWithMeta(string tagData, int pageNum, int pageSize)
        {
            return base.Channel.SearchForDocumentWithMeta(tagData, pageNum, pageSize);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> SearchForDocumentWithMetaAsync(string tagData, int pageNum, int pageSize)
        {
            return base.Channel.SearchForDocumentWithMetaAsync(tagData, pageNum, pageSize);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ExecuteCmdResponse DmsServiceSoap.ExecuteCmd(ExecuteCmdRequest request)
        {
            return base.Channel.ExecuteCmd(request);
        }

        public byte[] ExecuteCmd(byte[] receivedCmd)
        {
            ExecuteCmdRequest inValue = new ExecuteCmdRequest();
            inValue.receivedCmd = receivedCmd;
            ExecuteCmdResponse retVal = ((DmsServiceSoap)(this)).ExecuteCmd(inValue);
            return retVal.ExecuteCmdResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ExecuteCmdResponse> DmsServiceSoap.ExecuteCmdAsync(ExecuteCmdRequest request)
        {
            return base.Channel.ExecuteCmdAsync(request);
        }

        public System.Threading.Tasks.Task<ExecuteCmdResponse> ExecuteCmdAsync(byte[] receivedCmd)
        {
            ExecuteCmdRequest inValue = new ExecuteCmdRequest();
            inValue.receivedCmd = receivedCmd;
            return ((DmsServiceSoap)(this)).ExecuteCmdAsync(inValue);
        }

        public string ProvideDownloadLink(string docID)
        {
            return base.Channel.ProvideDownloadLink(docID);
        }

        public System.Threading.Tasks.Task<string> ProvideDownloadLinkAsync(string docID)
        {
            return base.Channel.ProvideDownloadLinkAsync(docID);
        }

        public System.Data.DataSet GetCustomerDocument(string customerNum)
        {
            return base.Channel.GetCustomerDocument(customerNum);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDocumentAsync(string customerNum)
        {
            return base.Channel.GetCustomerDocumentAsync(customerNum);
        }

        public System.Data.DataSet GetCustomerDocumentMulti(string customerNum, string langCode)
        {
            return base.Channel.GetCustomerDocumentMulti(customerNum, langCode);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDocumentMultiAsync(string customerNum, string langCode)
        {
            return base.Channel.GetCustomerDocumentMultiAsync(customerNum, langCode);
        }

        public System.Data.DataSet GetMetaData(int docID)
        {
            return base.Channel.GetMetaData(docID);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetMetaDataAsync(int docID)
        {
            return base.Channel.GetMetaDataAsync(docID);
        }

        public System.Data.DataSet GetStatementDocument(string cardNum, string customerNum)
        {
            return base.Channel.GetStatementDocument(cardNum, customerNum);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetStatementDocumentAsync(string cardNum, string customerNum)
        {
            return base.Channel.GetStatementDocumentAsync(cardNum, customerNum);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetFileResponse DmsServiceSoap.GetFile(GetFileRequest request)
        {
            return base.Channel.GetFile(request);
        }

        public byte[] GetFile(string tagData)
        {
            GetFileRequest inValue = new GetFileRequest();
            inValue.tagData = tagData;
            GetFileResponse retVal = ((DmsServiceSoap)(this)).GetFile(inValue);
            return retVal.GetFileResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GetFileResponse> DmsServiceSoap.GetFileAsync(GetFileRequest request)
        {
            return base.Channel.GetFileAsync(request);
        }

        public System.Threading.Tasks.Task<GetFileResponse> GetFileAsync(string tagData)
        {
            GetFileRequest inValue = new GetFileRequest();
            inValue.tagData = tagData;
            return ((DmsServiceSoap)(this)).GetFileAsync(inValue);
        }

        public int[] SearchForDocumentWithCreateTime(string tagData, System.DateTime startDate, System.DateTime endDate)
        {
            return base.Channel.SearchForDocumentWithCreateTime(tagData, startDate, endDate);
        }

        public System.Threading.Tasks.Task<int[]> SearchForDocumentWithCreateTimeAsync(string tagData, System.DateTime startDate, System.DateTime endDate)
        {
            return base.Channel.SearchForDocumentWithCreateTimeAsync(tagData, startDate, endDate);
        }

        public System.Data.DataSet GetSchemaList(string LangCode)
        {
            return base.Channel.GetSchemaList(LangCode);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetSchemaListAsync(string LangCode)
        {
            return base.Channel.GetSchemaListAsync(LangCode);
        }

        public long[] MultiplicateReferences(long DocID, string[] referenceList)
        {
            return base.Channel.MultiplicateReferences(DocID, referenceList);
        }

        public System.Threading.Tasks.Task<long[]> MultiplicateReferencesAsync(long DocID, string[] referenceList)
        {
            return base.Channel.MultiplicateReferencesAsync(DocID, referenceList);
        }

        public System.Data.DataSet GetTagList(string SchemaID, string LangCode)
        {
            return base.Channel.GetTagList(SchemaID, LangCode);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetTagListAsync(string SchemaID, string LangCode)
        {
            return base.Channel.GetTagListAsync(SchemaID, LangCode);
        }

        public System.Data.DataSet GetTagElementList(string TagID, string LangCode)
        {
            return base.Channel.GetTagElementList(TagID, LangCode);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetTagElementListAsync(string TagID, string LangCode)
        {
            return base.Channel.GetTagElementListAsync(TagID, LangCode);
        }

        public long AddBarcodedDocRecord(string docTypeID)
        {
            return base.Channel.AddBarcodedDocRecord(docTypeID);
        }

        public System.Threading.Tasks.Task<long> AddBarcodedDocRecordAsync(string docTypeID)
        {
            return base.Channel.AddBarcodedDocRecordAsync(docTypeID);
        }

        public DMSDocument GetDMSDocument(long docID)
        {
            return base.Channel.GetDMSDocument(docID);
        }

        public System.Threading.Tasks.Task<DMSDocument> GetDMSDocumentAsync(long docID)
        {
            return base.Channel.GetDMSDocumentAsync(docID);
        }

        public bool CustomerHasStockDoc(string customerNum)
        {
            return base.Channel.CustomerHasStockDoc(customerNum);
        }

        public System.Threading.Tasks.Task<bool> CustomerHasStockDocAsync(string customerNum)
        {
            return base.Channel.CustomerHasStockDocAsync(customerNum);
        }

        public DocReturnValues CustomerHasDocByType(string customerNum, int docType)
        {
            return base.Channel.CustomerHasDocByType(customerNum, docType);
        }

        public System.Threading.Tasks.Task<DocReturnValues> CustomerHasDocByTypeAsync(string customerNum, int docType)
        {
            return base.Channel.CustomerHasDocByTypeAsync(customerNum, docType);
        }

        public InfoAndDataResponse GetDocumentByCustomerAndTag(string customerNum, string tags)
        {
            return base.Channel.GetDocumentByCustomerAndTag(customerNum, tags);
        }

        public System.Threading.Tasks.Task<InfoAndDataResponse> GetDocumentByCustomerAndTagAsync(string customerNum, string tags)
        {
            return base.Channel.GetDocumentByCustomerAndTagAsync(customerNum, tags);
        }

        public IbGetDocumentGroupsResponse IbGetDocumentGroups(IbGetDocumentGroupsRequest request)
        {
            return base.Channel.IbGetDocumentGroups(request);
        }

        public System.Threading.Tasks.Task<IbGetDocumentGroupsResponse> IbGetDocumentGroupsAsync(IbGetDocumentGroupsRequest request)
        {
            return base.Channel.IbGetDocumentGroupsAsync(request);
        }

        public IbGetDocumentsResponse IbGetDocuments(IbGetDocumentsRequest request)
        {
            return base.Channel.IbGetDocuments(request);
        }

        public System.Threading.Tasks.Task<IbGetDocumentsResponse> IbGetDocumentsAsync(IbGetDocumentsRequest request)
        {
            return base.Channel.IbGetDocumentsAsync(request);
        }

        public IbGetDocumentContentResponse IbGetDocumentContent(IbGetDocumentContentRequest request)
        {
            return base.Channel.IbGetDocumentContent(request);
        }

        public System.Threading.Tasks.Task<IbGetDocumentContentResponse> IbGetDocumentContentAsync(IbGetDocumentContentRequest request)
        {
            return base.Channel.IbGetDocumentContentAsync(request);
        }
    }

}